# Config server (mongod)

apiVersion: v1
kind: Service
metadata:
  name: mongodb-configdb-headless-service
  labels:
    name: mongodb-configdb
spec:
  ports:
  - port: 27019
    targetPort: 27019
  clusterIP: None
  selector:
    role: mongodb-configdb
---
apiVersion: apps/v1 
kind: StatefulSet
metadata:
  name: mongodb-configdb
spec:
  selector:
    matchLabels:
      role: mongodb-configdb # has to match .spec.template.metadata.labels
  serviceName: mongodb-configdb-headless-service
  replicas: 2
  template:
    metadata:
      labels:
        role: mongodb-configdb
        tier: configdb
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: tier
                  operator: In
                  values:
                  - configdb
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongodb-configdb-container
          image: mongo:5.0.23
          command: ["/bin/sh"]
          args: ["-c", "mongod --port 27019 --bind_ip 0.0.0.0 --configsvr --replSet=Config"]
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
          ports:
            - containerPort: 27019

---
# Shard server 1 ()
apiVersion: v1
kind: Service
metadata:
  name: mongodb-shard1-headless-service
  labels:
    name: mongodb-shard1
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    role: mongodb-shard1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-shard1
spec:
  selector:
    matchLabels:
      role: mongodb-shard1 # has to match .spec.template.metadata.labels
  serviceName: mongodb-shard1-headless-service
  replicas: 2
  template:
    metadata:
      labels:
        role: mongodb-shard1
        tier: maindb
        replicaset: Shard1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: replicaset
                  operator: In
                  values:
                  - Shard1
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongodb-shard1-container
          image: mongo:5.0.23
          command: ["/bin/sh"]
          args: ["-c", "mongod --shardsvr --replSet=Shard1 --bind_ip_all "]
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
          ports:
            - containerPort: 27017

---
# Shard server 2 ()

apiVersion: v1
kind: Service
metadata:
  name: mongodb-shard2-headless-service
  labels:
    name: mongodb-shard2
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    role: mongodb-shard2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-shard2
spec:
  selector:
    matchLabels:
      role: mongodb-shard2 # has to match .spec.template.metadata.labels
  serviceName: mongodb-shard2-headless-service
  replicas: 2
  template:
    metadata:
      labels:
        role: mongodb-shard2
        tier: maindb
        replicaset: Shard2
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: replicaset
                  operator: In
                  values:
                  - Shard2
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongodb-shard2-container
          image: mongo:5.0.23
          command: ["/bin/sh"]
          args: ["-c", "mongod --shardsvr --replSet=Shard2 --bind_ip_all "]
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
          ports:
            - containerPort: 27017

---
# router server (mongos)

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongos
spec:
  selector:
    matchLabels:
      role: mongos
  replicas: 2
  template:
    metadata:
      labels:
        role: mongos
        tier: routers
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: tier
                  operator: In
                  values:
                  - routers
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 10
      containers:
        - name: mongos-container
          image: mongo:5.0.23
          command: ["/bin/sh"]
          args: ["-c", "mongos --port 27017 --bind_ip_all --configdb Config/mongodb-configdb-0.mongodb-configdb-headless-service.default.svc.cluster.local:27019"]
          resources: 
            requests:
              cpu: 50m
              memory: 100Mi
          ports:
            - containerPort: 27017
